name: Add Package

on:
  workflow_dispatch:
    inputs:
      package-name:
        description: 'Package name (e.g., mycmd)'
        required: true
        type: string
      repo-url:
        description: 'Repository URL (optional, will auto-detect if not provided)'
        required: false
        type: string
      import-path:
        description: 'Import path (optional, defaults to go.ngs.io/{package-name})'
        required: false
        type: string
      author:
        description: 'Author name (optional)'
        required: false
        type: string

jobs:
  add-package:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_PAT || secrets.GITHUB_TOKEN }}
      
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'
      
      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v3
        with:
          hugo-version: 'latest'
      
      - name: Install dependencies
        run: go mod download
      
      - name: Build add-package tool
        run: go build -o add-package ./cmd/add-package
      
      - name: Add package
        id: add
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ARGS="${{ github.event.inputs.package-name }}"
          
          if [ -n "${{ github.event.inputs.repo-url }}" ]; then
            ARGS="$ARGS --repo ${{ github.event.inputs.repo-url }}"
          fi
          
          if [ -n "${{ github.event.inputs.import-path }}" ]; then
            ARGS="$ARGS --import-path ${{ github.event.inputs.import-path }}"
          fi
          
          if [ -n "${{ github.event.inputs.author }}" ]; then
            ARGS="$ARGS --author \"${{ github.event.inputs.author }}\""
          fi
          
          echo "Running: ./add-package $ARGS"
          
          # Capture output for PR description
          OUTPUT=$(./add-package $ARGS 2>&1)
          echo "$OUTPUT"
          
          # Save output for PR body
          echo "$OUTPUT" > add-output.txt
          
          # Check if command succeeded
          if [ $? -ne 0 ]; then
            echo "add-failed=true" >> $GITHUB_OUTPUT
            exit 1
          fi
      
      - name: Check for changes
        id: changes
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            echo "has-changes=true" >> $GITHUB_OUTPUT
            
            # Get the created file
            CREATED_FILE=$(git status --porcelain | grep "^??" | sed 's/^?? //')
            echo "created-file=$CREATED_FILE" >> $GITHUB_OUTPUT
          else
            echo "has-changes=false" >> $GITHUB_OUTPUT
            echo "No changes were made. Package may already exist."
          fi
      
      - name: Create Pull Request
        if: steps.changes.outputs.has-changes == 'true'
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GH_PAT || secrets.GITHUB_TOKEN }}
          commit-message: "Add ${{ github.event.inputs.package-name }} package"
          title: "Add ${{ github.event.inputs.package-name }} package"
          body: |
            This PR adds the `${{ github.event.inputs.package-name }}` package to go.ngs.io.
            
            ## Package Details
            - **Name**: ${{ github.event.inputs.package-name }}
            - **Repository**: ${{ github.event.inputs.repo-url || 'Auto-detected' }}
            - **Import Path**: ${{ github.event.inputs.import-path || format('go.ngs.io/{0}', github.event.inputs.package-name) }}
            - **Author**: ${{ github.event.inputs.author || 'Auto-detected' }}
            
            ## Trigger
            - Workflow: Manual dispatch
            - Run: [${{ github.run_number }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
            
            Please review the generated package file and merge if everything looks correct.
          branch: add-package-${{ github.event.inputs.package-name }}
          delete-branch: true
      
      - name: Create issue on failure
        if: failure() && steps.add.outputs.add-failed == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const output = require('fs').readFileSync('add-output.txt', 'utf8');
            const packageName = '${{ github.event.inputs.package-name }}';
            
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `Failed to add package: ${packageName}`,
              body: `The add package workflow failed for \`${packageName}\`.
              
              ## Error Output
              \`\`\`
              ${output}
              \`\`\`
              
              ## Action Required
              Please check that the repository URL is valid and accessible.
              
              Workflow run: ${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`,
              labels: ['bug', 'automated']
            });