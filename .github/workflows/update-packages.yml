name: Update Packages

on:
  workflow_dispatch:
    inputs:
      packages:
        description: 'Specific packages to update (space-separated, leave empty for all)'
        required: false
        type: string
      dry-run:
        description: 'Dry run (preview changes without updating)'
        required: false
        type: boolean
        default: false
  schedule:
    # Run weekly on Sunday at 00:00 UTC
    - cron: '0 0 * * 0'

jobs:
  update-packages:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_PAT || secrets.GITHUB_TOKEN }}
      
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'
      
      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v3
        with:
          hugo-version: 'latest'
      
      - name: Install dependencies
        run: go mod download
      
      - name: Build update-packages tool
        run: go build -o update-packages ./cmd/update-packages
      
      - name: Update packages
        id: update
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ARGS=""
          
          # Add specific packages if provided
          if [ -n "${{ github.event.inputs.packages }}" ]; then
            ARGS="${{ github.event.inputs.packages }}"
          fi
          
          # Add dry-run flag if enabled
          if [ "${{ github.event.inputs.dry-run }}" = "true" ]; then
            ARGS="$ARGS --dry-run"
            echo "Running in dry-run mode..."
          fi
          
          echo "Running: ./update-packages $ARGS"
          
          # Capture output for PR description
          OUTPUT=$(./update-packages $ARGS 2>&1)
          echo "$OUTPUT"
          
          # Save output for PR body
          echo "$OUTPUT" > update-output.txt
          
          # Check if command succeeded
          if [ $? -ne 0 ]; then
            echo "update-failed=true" >> $GITHUB_OUTPUT
            exit 1
          fi
      
      - name: Check for changes
        id: changes
        if: github.event.inputs.dry-run != 'true'
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            echo "has-changes=true" >> $GITHUB_OUTPUT
            
            # Get list of modified files
            MODIFIED_FILES=$(git diff --name-only | grep "^content/" | sed 's/content\///; s/\.md$//' | tr '\n' ' ')
            echo "modified-packages=$MODIFIED_FILES" >> $GITHUB_OUTPUT
          else
            echo "has-changes=false" >> $GITHUB_OUTPUT
            echo "No packages needed updating."
          fi
      
      - name: Create Pull Request
        if: steps.changes.outputs.has-changes == 'true' && github.event.inputs.dry-run != 'true'
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GH_PAT || secrets.GITHUB_TOKEN }}
          commit-message: "Update package metadata from GitHub"
          title: "Update package metadata from GitHub"
          body: |
            This PR updates package metadata from GitHub API.
            
            ## Updated Packages
            ${{ steps.changes.outputs.modified-packages }}
            
            ## Update Summary
            ```
            $(cat update-output.txt)
            ```
            
            ## Trigger
            - Workflow: ${{ github.event_name }}
            - Run: [${{ github.run_number }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
            ${{ github.event.inputs.packages && format('- Packages: {0}', github.event.inputs.packages) || '- Packages: All' }}
            
            Please review the changes and merge if everything looks correct.
          branch: update-packages-${{ github.run_number }}
          delete-branch: true
      
      - name: Output dry-run results
        if: github.event.inputs.dry-run == 'true'
        run: |
          echo "## Dry Run Results"
          echo "The following changes would be made:"
          cat update-output.txt
      
      - name: Create issue on failure
        if: failure() && steps.update.outputs.update-failed == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const output = require('fs').readFileSync('update-output.txt', 'utf8');
            
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'Package update failed',
              body: `The automatic package update workflow failed.
              
              ## Error Output
              \`\`\`
              ${output}
              \`\`\`
              
              ## Action Required
              Please check that all repository URLs are valid and accessible.
              
              Workflow run: ${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`,
              labels: ['bug', 'automated']
            });